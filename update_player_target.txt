func update_player_target():
	# Set next target
	if current_target == $Player:
		if Globals.bosses.is_empty():
			next_target = $Player
		else:
			current_boss_index = 0
			next_target = Globals.bosses[current_boss_index]
	else:
		if Globals.bosses.is_empty():
			next_target = $Player
		else:
			if current_boss_index >= (Globals.bosses.size()): #wrap back to 0
				current_boss_index = 0
			next_target = Globals.bosses[current_boss_index]
	
	# Pass next_target to Player for attack tracking
	$Player.current_target = next_target
	
	# Update the HUD based on the next_target
	if next_target != $Player: #check for self targeting (no boss present)
		
		if is_instance_valid(next_target):#check to be sure next target is still valid (in cases of multikills)
			next_target.targeted(true) #always target the new target
			$HUD.update_boss_healthbar(next_target.current_health, next_target.max_health)
		
		if current_target != next_target:#only change if target is different
			if is_instance_valid(current_target): #check if current target exists before changing sprite
				current_target.targeted(false)
				print(str(current_target) + ": untargeted")
				
			current_target = next_target #set new current target
			print(str(current_target) + ": targeted")
			
		else:
			print("same target")
	else:
		print("Player targeted")
		

# iterates through multiple targets, if any
func iterate_target():
	if not Globals.bosses.is_empty():
		if current_target == $Player:
			current_boss_index = 0
		else:
			current_boss_index += 1
			
		if current_boss_index >= (Globals.bosses.size()): #wrap back to 0
			current_boss_index = 0
			
		next_target = Globals.bosses[current_boss_index]
	
	else:
		next_target = $Player
		
	update_player_target()